// Code generated by entc, DO NOT EDIT.

package usersession

const (
	// Label holds the string label denoting the usersession type in the database.
	Label = "user_session"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSessionID holds the string denoting the session_id field in the database.
	FieldSessionID = "session_id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldLoginTime holds the string denoting the login_time field in the database.
	FieldLoginTime = "login_time"
	// FieldLastSeenTime holds the string denoting the last_seen_time field in the database.
	FieldLastSeenTime = "last_seen_time"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the usersession in the database.
	Table = "user_sessions"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "user_sessions"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_id"
)

// Columns holds all SQL columns for usersession fields.
var Columns = []string{
	FieldID,
	FieldSessionID,
	FieldUserID,
	FieldLoginTime,
	FieldLastSeenTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
